esphome:
  name: daikin-air-sensor
  project:
    name: "DAIKIN.BRY88AB151K"
    version: "PM2105" #根据PM2.5传感器型号选择，方便后续OTA查找文件
    # version: "PM2005"
  name_add_mac_suffix: true
  # includes:
    # - "header/cm1106.h"
    # - "header/pm2105i2c.h"  #根据PM2.5传感器型号选择
    # - "pm2005.h"

esp32:
  board: nodemcu-32s

wifi:
  # ssid: 'L' #填写自己的WiFi及密码
  # password: '1234567890'
  ap:
    ssid: "DAIKIN Fallback Hotspot"

captive_portal:

api:
  reboot_timeout: 0s

ota:

http_request:
  timeout: 5s
  verify_ssl: false


web_server:
  port: 80

logger:
  logs:
    hdc1080: WARN
    sgp30: WARN
    sensor: WARN
    component: ERROR

# bluetooth_proxy:  #需要蓝牙代理功能可以打开
#   active: true

# esp32_ble_tracker:

uart:
- id: cm1106_uart
  rx_pin: 16
  tx_pin: 17
  baud_rate: 9600

i2c:
- id: pm25_bus
  sda: 23
  scl: 22
  scan: true
- id: th_bus
  sda: 19
  scl: 21
  scan: true

interval:
  - id: http_report_timer
    interval: 60s
    then:
      - http_request.get:
          url: !lambda |-
            return std::string(id(httpreportendpoint).state) + 
                   "?co2=" + to_string((int)id(co2sensor).state) +
                   "&pm1=" + to_string(id(pm1sensor).state) +
                   "&pm25=" + to_string(id(pm25sensor).state) +
                   "&pm10=" + to_string(id(pm10sensor).state) +
                   "&tvoc=" + to_string((int)id(tvocsensor).state) +
                   "&temp=" + to_string(id(temperature).state) +
                   "&humi=" + to_string(id(humidity).state);

sensor:
- platform: cm1106
  id: cm1106sen
  update_interval: 20s
  co2:
    name: "DAIKIN CO2 Sensor"
    id: co2sensor
    unit_of_measurement: "ppm"

- platform: pm2005
  type: pm2105
  i2c_id: pm25_bus
  update_interval: 15s
  pm_1_0:
    id: pm1sensor
    unit_of_measurement: "µg/m³"
    name: "PM1.0"
  pm_2_5:
    id: pm25sensor
    unit_of_measurement: "µg/m³"
    name: "PM2.5"
  pm_10_0:
    id: pm10sensor
    unit_of_measurement: "µg/m³"
    name: "PM10.0"

- platform: sgp30
  i2c_id: th_bus
  compensation:
    temperature_source: temperature
    humidity_source: humidity
  eco2:
    id: eco2sensor
    internal: true
  tvoc:
    name: "DAIKIN TVOC Sensor"
    id: tvocsensor
    device_class: volatile_organic_compounds
    unit_of_measurement: "µg/m³"
    filters:
      - throttle: 15s
      - lambda: |-
          if (x * id(tvocmultiply).state > id(tvocmax).state) {
            return id(tvocmax).state;
          } else {
            return x * id(tvocmultiply).state;
          }

- platform: hdc1080
  i2c_id: th_bus
  update_interval: 15s
  temperature:
    name: "DAIKIN Temperature Sensor"
    id: temperature
    filters:
      - lambda: return x - id(temperatureoffset).state;
  humidity:
    name: "DAIKIN Humidity Sensor"
    id: humidity
    filters:
      - lambda: return x * id(humiditymultiply).state;
      - clamp:
          max_value: 100
          
- platform: wifi_signal
  name: "DAIKIN Signal"

switch:
- platform: template
  name: "DAIKIN LED Indicator"
  restore_mode: RESTORE_DEFAULT_OFF
  icon: mdi:led-off
  id: indicator
  optimistic: true
- platform: gpio
  pin: 4
  id: co2led
  internal: true
- platform: gpio
  pin: 32
  id: tvocch2oled
  internal: true
- platform: gpio
  pin: 33
  id: pm25led
  internal: true

status_led:
  pin: 25

text:
- platform: template
  name: "HTTP Report endpoint"
  entity_category: "config"
  mode: text
  id: httpreportendpoint
  restore_value: true
  optimistic: true

number:
- platform: template
  name: "DAIKIN Threshold CO2"
  entity_category: "config"
  id: co2threshold
  optimistic: true
  unit_of_measurement: "ppm"
  min_value: 400
  max_value: 5000
  step: 100
  initial_value: 1000
  restore_value: true
- platform: template
  name: "DAIKIN Threshold PM2.5"
  entity_category: "config"
  id: pm25threshold
  optimistic: true
  unit_of_measurement: "µg/m³"
  min_value: 0
  max_value: 200
  step: 10
  initial_value: 50
  restore_value: true
- platform: template
  name: "DAIKIN Threshold TVOC"
  entity_category: "config"
  id: tvocthreshold
  optimistic: true
  unit_of_measurement: "µg/m³"
  min_value: 0
  max_value: 20000
  step: 1000
  initial_value: 1000
  restore_value: true
- platform: template
  name: "DAIKIN TVOC MAX"
  entity_category: "config"
  id: tvocmax
  optimistic: true
  unit_of_measurement: "µg/m³"
  min_value: 5000
  max_value: 20000
  step: 1000
  initial_value: 10000
  restore_value: true
- platform: template
  name: "DAIKIN TVOC Multiply"
  entity_category: "config"
  id: tvocmultiply
  optimistic: true
  min_value: 1
  max_value: 5
  step: 0.1
  initial_value: 3
  restore_value: true
- platform: template
  name: "DAIKIN Humidity Multiply"
  entity_category: "config"
  id: humiditymultiply
  optimistic: true
  min_value: 1
  max_value: 1.6
  step: 0.01
  initial_value: 1.4
  restore_value: true
- platform: template
  name: "DAIKIN Temperature Offset"
  entity_category: "config"
  id: temperatureoffset
  optimistic: true
  min_value: 0
  max_value: 10
  step: 0.1
  initial_value: 6
  restore_value: true

binary_sensor:
- platform: template
  internal: true
  id: tvocch2olambda
  lambda: |-
    if (id(indicator).state == true) {
      if (id(tvocsensor).state > id(tvocthreshold).state) {
        return true;
      } else {
        return false;
    }
    } else {
      return false;
    }
  on_press:
    then:
      - switch.turn_on: tvocch2oled
  on_release:
    then:
      - switch.turn_off: tvocch2oled
- platform: template
  internal: true
  id: co2lambda
  lambda: |-
    if (id(indicator).state == true) {
      if (id(co2sensor).state > id(co2threshold).state) {
        return true;
      } else {
        return false;
    }
    } else {
      return false;
    }
  on_press:
    then:
      - switch.turn_on: co2led
  on_release:
    then:
      - switch.turn_off: co2led
- platform: template
  internal: true
  id: pm25lambda
  lambda: |-
    if (id(indicator).state == true) {
      if (id(pm25sensor).state > id(pm25threshold).state) {
        return true;
      } else {
        return false;
    }
    } else {
      return false;
    }
  on_press:
    then:
      - switch.turn_on: pm25led
  on_release:
    then:
      - switch.turn_off: pm25led
- platform: template
  internal: true
  id: co2_calibration
  lambda: |-
    if (id(co2sensor).state == 400) {
      return true;
    } else {
      return false;
    }
  filters:
    - delayed_on: 5min #CO2持续400ppm并保持5分钟会自动校准
  on_press:
    then:
      - cm1106.calibrate_zero: cm1106sen
- platform: gpio
  pin: 34
  id: RESET
  internal: true
  on_press:
    then:
      - button.press: reset

button:
- platform: restart
  name: "DAIKIN Restart"
  entity_category: "diagnostic"
- platform: factory_reset
  id: reset
  internal: true
- platform: template
  name: "CM1106 Calibration"
  entity_category: diagnostic
  on_press:
    then:
      - cm1106.calibrate_zero: cm1106sen
